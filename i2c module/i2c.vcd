$date
	Thu Apr  7 09:52:34 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module i2c_tb $end
$var wire 4 ! W_MISO [3:0] $end
$var wire 1 " SCLK $end
$var wire 1 # MOSI $end
$var wire 1 $ MISO $end
$var reg 8 % ADDR [7:0] $end
$scope module UUTM0 $end
$var wire 8 & ADDR [7:0] $end
$var wire 1 $ RX $end
$var reg 8 ' DATA [7:0] $end
$var reg 1 " SCLK $end
$var reg 1 # TX $end
$var integer 32 ( i [31:0] $end
$upscope $end
$scope module UUTS0 $end
$var wire 1 # RX $end
$var wire 1 " SCLK $end
$var reg 8 ) ADDR [7:0] $end
$var reg 8 * ADDR_COMPARE [7:0] $end
$var reg 8 + DATA [7:0] $end
$var reg 1 , TX $end
$var reg 4 - counter [3:0] $end
$upscope $end
$scope module UUTS1 $end
$var wire 1 # RX $end
$var wire 1 " SCLK $end
$var reg 8 . ADDR [7:0] $end
$var reg 8 / ADDR_COMPARE [7:0] $end
$var reg 8 0 DATA [7:0] $end
$var reg 1 1 TX $end
$var reg 4 2 counter [3:0] $end
$upscope $end
$scope module UUTS2 $end
$var wire 1 # RX $end
$var wire 1 " SCLK $end
$var reg 8 3 ADDR [7:0] $end
$var reg 8 4 ADDR_COMPARE [7:0] $end
$var reg 8 5 DATA [7:0] $end
$var reg 1 6 TX $end
$var reg 4 7 counter [3:0] $end
$upscope $end
$scope module UUTS3 $end
$var wire 1 # RX $end
$var wire 1 " SCLK $end
$var reg 8 8 ADDR [7:0] $end
$var reg 8 9 ADDR_COMPARE [7:0] $end
$var reg 8 : DATA [7:0] $end
$var reg 1 ; TX $end
$var reg 4 < counter [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 <
0;
b1101100 :
b0 9
b101011 8
b0 7
06
b1000001 5
b0 4
b101010 3
b0 2
01
b111111 0
b0 /
b11011 .
b0 -
0,
b1011101 +
b0 *
b11010 )
b0 (
bx '
b11010 &
b11010 %
0$
x#
0"
b0 !
$end
#10
b1 -
b1 2
b1 7
b1 <
1"
0#
#20
0"
b1 (
#30
b10 <
b10 9
b10 7
b10 4
b10 2
b10 /
b10 -
b10 *
1"
1#
#40
0"
b10 (
#50
b11 -
b11 2
b11 7
b11 <
1"
0#
#60
0"
b11 (
#70
b100 <
b1010 9
b100 7
b1010 4
b100 2
b1010 /
b100 -
b1010 *
1"
1#
#80
0"
b100 (
#90
b101 -
b11010 *
b101 2
b11010 /
b101 7
b11010 4
b101 <
b11010 9
1"
#100
0"
b101 (
#110
b110 <
b110 7
b110 2
b110 -
1"
0#
#120
0"
b110 (
#130
b111 -
b111 2
b111 7
b111 <
1"
#140
0"
b111 (
#150
b1000 <
b1000 7
b1000 2
b1000 -
1"
#160
0"
b0 (
#170
b1001 -
1$
b1 !
1,
b1001 2
b1001 7
b1001 <
1"
#180
0"
b1 (
bx1 '
#190
b1010 <
b1010 7
b1010 2
b1010 -
0$
b0 !
0,
1"
#200
0"
b10 (
bx01 '
#210
b1011 -
1$
b1 !
1,
b1011 2
b1011 7
b1011 <
1"
#220
0"
b11 (
bx101 '
#230
b1100 <
b1100 7
b1100 2
b1100 -
1"
#240
0"
b100 (
bx1101 '
#250
b1101 -
b1101 2
b1101 7
b1101 <
1"
#260
0"
b101 (
bx11101 '
#270
b1110 <
b1110 7
b1110 2
b1110 -
0$
b0 !
0,
1"
#280
0"
b110 (
bx011101 '
#290
b1111 -
1$
b1 !
1,
b1111 2
b1111 7
b1111 <
1"
#300
0"
b111 (
bx1011101 '
#310
b0 <
b0 7
b0 2
b0 -
0$
b0 !
0,
1"
#320
b1000 (
b1011101 '
#500
0"
b0 (
b11011 %
b11011 &
#510
b1 -
b11011 *
b1 2
b11011 /
b1 7
b11011 4
b1 <
b11011 9
1"
1#
#520
0"
b1 (
#530
b10 <
b10 7
b10 2
b10 -
1"
#540
0"
b10 (
#550
b11 -
b11 2
b11 7
b11 <
1"
0#
#560
0"
b11 (
#570
b100 <
b100 7
b100 2
b100 -
1"
1#
#580
0"
b100 (
#590
b101 -
b101 2
b101 7
b101 <
1"
#600
0"
b101 (
#610
b110 <
b110 7
b110 2
b110 -
1"
0#
#620
0"
b110 (
#630
b111 -
b111 2
b111 7
b111 <
1"
#640
0"
b111 (
#650
b1000 <
b1000 7
b1000 2
b1000 -
1"
#660
0"
b0 (
#670
b1001 -
b1001 2
1$
b10 !
11
b1001 7
b1001 <
1"
#680
0"
b1 (
#690
b1010 <
b1010 7
b1010 2
b1010 -
1"
#700
0"
b10 (
b1011111 '
#710
b1011 -
b1011 2
b1011 7
b1011 <
1"
#720
0"
b11 (
#730
b1100 <
b1100 7
b1100 2
b1100 -
1"
#740
0"
b100 (
#750
b1101 -
b1101 2
b1101 7
b1101 <
1"
#760
0"
b101 (
#770
b1110 <
b1110 7
b1110 2
b1110 -
1"
#780
0"
b110 (
b1111111 '
#790
b1111 -
b1111 2
0$
b0 !
01
b1111 7
b1111 <
1"
#800
0"
b111 (
b111111 '
#810
b0 <
b0 7
b0 2
b0 -
1"
#820
b1000 (
#1000
0"
b0 (
b101010 %
b101010 &
#1010
b1 -
b11010 *
b1 2
b11010 /
b1 7
b11010 4
b1 <
b11010 9
1"
#1020
0"
b1 (
#1030
b10 <
b10 7
b10 2
b10 -
1"
1#
#1040
0"
b10 (
#1050
b11 -
b11 2
b11 7
b11 <
1"
0#
#1060
0"
b11 (
#1070
b100 <
b100 7
b100 2
b100 -
1"
1#
#1080
0"
b100 (
#1090
b101 -
b1010 *
b101 2
b1010 /
b101 7
b1010 4
b101 <
b1010 9
1"
0#
#1100
0"
b101 (
#1110
b110 <
b101010 9
b110 7
b101010 4
b110 2
b101010 /
b110 -
b101010 *
1"
1#
#1120
0"
b110 (
#1130
b111 -
b111 2
b111 7
b111 <
1"
0#
#1140
0"
b111 (
#1150
b1000 <
b1000 7
b1000 2
b1000 -
1"
#1160
0"
b0 (
#1170
b1001 -
b1001 2
b1001 7
1$
b100 !
16
b1001 <
1"
#1180
0"
b1 (
#1190
b1010 <
b1010 7
0$
b0 !
06
b1010 2
b1010 -
1"
#1200
0"
b10 (
b111101 '
#1210
b1011 -
b1011 2
b1011 7
b1011 <
1"
#1220
0"
b11 (
b111001 '
#1230
b1100 <
b1100 7
b1100 2
b1100 -
1"
#1240
0"
b100 (
b110001 '
#1250
b1101 -
b1101 2
b1101 7
b1101 <
1"
#1260
0"
b101 (
b100001 '
#1270
b1110 <
b1110 7
b1110 2
b1110 -
1"
#1280
0"
b110 (
b1 '
#1290
b1111 -
b1111 2
b1111 7
1$
b100 !
16
b1111 <
1"
#1300
0"
b111 (
b1000001 '
#1310
b0 <
b0 7
0$
b0 !
06
b0 2
b0 -
1"
#1320
b1000 (
#1500
0"
b0 (
b101011 %
b101011 &
#1510
b1 -
b101011 *
b1 2
b101011 /
b1 7
b101011 4
b1 <
b101011 9
1"
1#
#1520
0"
b1 (
#1530
b10 <
b10 7
b10 2
b10 -
1"
#1540
0"
b10 (
#1550
b11 -
b11 2
b11 7
b11 <
1"
0#
#1560
0"
b11 (
#1570
b100 <
b100 7
b100 2
b100 -
1"
1#
#1580
0"
b100 (
#1590
b101 -
b101 2
b101 7
b101 <
1"
0#
#1600
0"
b101 (
#1610
b110 <
b110 7
b110 2
b110 -
1"
1#
#1620
0"
b110 (
#1630
b111 -
b111 2
b111 7
b111 <
1"
0#
#1640
0"
b111 (
#1650
b1000 <
b1000 7
b1000 2
b1000 -
1"
#1660
0"
b0 (
#1670
b1001 -
b1001 2
b1001 7
b1001 <
1"
#1680
0"
b1 (
b1000000 '
#1690
b1010 <
b1010 7
b1010 2
b1010 -
1"
#1700
0"
b10 (
#1710
b1011 -
b1011 2
b1011 7
b1011 <
1$
b1000 !
1;
1"
#1720
0"
b11 (
b1000100 '
#1730
b1100 <
b1100 7
b1100 2
b1100 -
1"
#1740
0"
b100 (
b1001100 '
#1750
b1101 -
b1101 2
b1101 7
b1101 <
0$
b0 !
0;
1"
#1760
0"
b101 (
#1770
b1110 <
1$
b1000 !
1;
b1110 7
b1110 2
b1110 -
1"
#1780
0"
b110 (
b1101100 '
#1790
b1111 -
b1111 2
b1111 7
b1111 <
1"
#1800
0"
b111 (
#1810
b0 <
0$
b0 !
0;
b0 7
b0 2
b0 -
1"
#1820
b1000 (
#2000
